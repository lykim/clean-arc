package com.bit.core.strategy.findMany;

import java.util.ArrayList;
import java.util.List;

import com.bit.core.constant.ApproverModule;
import com.bit.core.entity.Approver;
import com.bit.core.entity.KpiPeriod;
import com.bit.core.entity.User;
import com.bit.core.gateway.ApproverGateway;
import com.bit.core.gateway.factory.GatewayFactory;
import com.bit.core.model.request.FindManyRequestModel;
import com.bit.core.response.base.Page;
import com.bit.core.strategy.FindManyStrategy;
import com.bit.core.strategy.findOne.FindUserByToken;
import com.bit.core.validator.NullValidator;
import com.bit.core.validator.base.ValidatorChain;

public class FindManyTargetKpiApproval extends FindManyStrategy<KpiPeriod, FindManyRequestModel>{

	public FindManyTargetKpiApproval(FindManyRequestModel requestModel) {
		this.param = requestModel;
	}
	
	@Override
	public Page<KpiPeriod> find() {
		FindUserByToken findUser = new FindUserByToken(param);
		User user = findUser.findOne();
		ApproverGateway approverGateway = (ApproverGateway)GatewayFactory.APPROVEABLE_GATEWAY.get();
		Approver approver =  approverGateway.findByModule(ApproverModule.TARGET_KPI);
		for(User userApprover : approver.getApprovers()) {
			
		}
		return null;
	}
	
	
	

	@Override
	public List<ValidatorChain<?>> getValidatorChains() {
		List<ValidatorChain<?>> validatorChains = new ArrayList<>();
		validatorChains.add(new NullValidator("period", this.param.filterEqual));
		if(this.param.filterEqual != null) {
			validatorChains.add(new NullValidator("period", this.param.filterEqual.get("period")));
		}
		return validatorChains;
	}
}
